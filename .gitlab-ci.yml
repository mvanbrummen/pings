image: ruby:2.1

stages:
  - test
  - build

before_script:
    - export CURRENT_BUILD_PATH=$(pwd)
    - echo $CURRENT_BUILD_PATH
    - echo $PATH
    - rm -rf $HOME/golang
    - rm -rf $HOME/gopath
    - mkdir -p $HOME/golang # for GOROOT (contains the Go binary & core packages)
    - mkdir -p $HOME/gopath/src/gitlab.com/mvanbrummen $HOME/gopath/bin $HOME/gopath/pkg
    - curl http://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz 2>/dev/null > go1.5.2.linux-amd64.tar.gz
    - tar -C $HOME/golang -xzf go1.5.2.linux-amd64.tar.gz
    - export GOROOT=$HOME/golang/go
    - export GOPATH=$HOME/gopath
    - export PATH=$PATH:$GOROOT/bin
    - export PATH=$PATH:$GOPATH/bin
    - (if [[ "$(go version)" == *"go version go1.5"* ]]; then echo "âœ“ Go binary installed!"; else echo "Go binary not installed"; exit -1; fi);
    - go version
    - echo $PATH
    - go env
    - which go
    - cp -R /builds/mvanbrummen/pings $GOPATH/src/gitlab.com/mvanbrummen
    - export BUILD_PATH=$GOPATH/src/gitlab.com/mvanbrummen/pings

test-my-project:
  stage: test
  script:
    - cd $BUILD_PATH
    - go get
    - go test
    - ruby pings.rb

build-my-project:
  stage: build
  script:
    - cd $BUILD_PATH
    - go get
    - go build
